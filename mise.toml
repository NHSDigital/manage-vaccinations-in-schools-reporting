[tools]
age = "latest"
awscli = "2.27.46"
gitleaks = "latest"
node = "lts"
python = "3.13"
sops = "latest"
uv = "latest"

[vars]
port = "4001"
uv_sync_args = "--frozen --no-dev"

[env]
DOCKER_BUILDKIT = 1
DOCKER_IMAGE = "mavis-reporting:latest"
FLASK_APP = "mavis.reporting:create_app"
PYTHONPYCACHEPREFIX = "tmp/pycache" # Output directory for Python bytecode cache
SESSION_TTL_SECONDS = "600"

[tasks."npm:install"]
description = "Install Node.js dependencies"
run = "npm install"

[tasks."uv:sync"]
description = "Sync Python dependencies with uv"
run = "uv sync {{vars.uv_sync_args}}"

[tasks."build:favicons"]
description = "Copy NHS UK frontend favicons"
depends = ["npm:install"]
sources = ["node_modules/nhsuk-frontend/dist/nhsuk/assets/images/*"]
outputs = ["mavis/reporting/static/favicons/*"]
run = [
    "cp -r node_modules/nhsuk-frontend/dist/nhsuk/assets/images/* mavis/reporting/static/favicons/",
]

[tasks."build:css"]
description = "Build CSS from SCSS"
depends = ["npm:install"]
sources = ["mavis/reporting/assets/scss/**/*.scss"]
outputs = ["mavis/reporting/static/css/app.css"]
run = "npm run build:scss"

[tasks."build:js"]
description = "Build JavaScript bundles"
depends = ["npm:install"]
sources = ["mavis/reporting/javascript/**/*.js"]
outputs = ["mavis/reporting/static/js/app.js"]
run = "npm run build:js"

[tasks.bundle]
description = "Install all dependencies"
depends = ["npm:install", "uv:sync"]

[tasks.build]
description = "Build all assets"
depends = ["bundle", "build:css", "build:js", "build:favicons"]

[tasks.clean]
description = "Clean build artifacts and dependencies"
run = [
    "rm -rf node_modules .venv .ruff_cache .pytest_cache htmlcov .coverage coverage* tmp/*",
]

[tasks.lint]
description = "Run code linting"
depends = ["uv:sync"]
run = "uv run ruff check ."

[tasks."lint:fix"]
description = "Run code linting with autofix"
depends = ["uv:sync"]
run = "uv run ruff check --fix ."

[tasks.typecheck]
description = "Run type checking with pyright"
depends = ["uv:sync"]
run = "uv run pyright"

[tasks."dev:scss"]
description = "Watch and build SCSS files"
depends = ["npm:install"]
run = "npm run build:scss:dev"

[tasks."dev:js"]
description = "Watch and build JS files"
depends = ["npm:install"]
run = "npm run build:js:dev"

[tasks."dev:flask"]
description = "Run Flask development server"
depends = ["uv:sync"]
run = "uv run flask run --debug -p {{vars.port}}"

[tasks."dev:start"]
description = "Start development servers (internal)"
hide = true
depends = ["bundle"]
run = "mise dev:scss ::: dev:js ::: dev:flask"

[tasks.dev]
description = "Start development servers"
run = "mise --env development dev:start"

[tasks.test]
description = "Run all tests"
depends = ["uv:sync"]
run = ["uv run pytest tests"]

[tasks."test:coverage"]
description = "Run tests with coverage reporting"
depends = ["uv:sync"]
run = [
    "uv run coverage run -m pytest tests",
    "uv run coverage report --fail-under=80",
    "uv run coverage html",
    "uv run coverage xml coverage.xml",
    "uv run coverage-badge -o coverage.svg -f",
]

[tasks.gitleaks]
description = "Detect secrets with gitleaks"
run = "gitleaks detect --verbose --redact"

[tasks."docker:build"]
description = "Build Docker image"
run = "docker build --platform linux/amd64 -t ${DOCKER_IMAGE} ."

[tasks."docker:run"]
description = "Run Docker container"
run = """
docker run --rm --network host \
           --env PORT={{vars.port}} \
           --env MISE_ENV=${MISE_ENV} \
           --env MISE_SOPS_AGE_KEY=${MISE_SOPS_AGE_KEY} \
           ${DOCKER_IMAGE}
"""

[tasks.docker]
description = "Build and run Docker container"
depends = ["docker:build"]
run = "MISE_SOPS_AGE_KEY=$(cat config/credentials/staging.key) mise docker:run"

[tasks.ci]
description = "Run CI checks in parallel"
run = "mise --env development gitleaks ::: lint ::: test ::: typecheck"

[tasks."credentials:show"]
description = "Show credentials"
run = "sops decrypt {{vars.credentials_file}}"

[tasks."credentials:edit"]
description = "Edit credentials"
run = "sops edit {{vars.credentials_file}}"
